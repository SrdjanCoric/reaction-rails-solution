{"ast":null,"code":"var _jsxFileName = \"/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/MoveCardFormContainer.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport MoveCardForm from \"./MoveCardForm\";\nimport calculatePosition from \"../../lib/PositionCalculator\";\nimport * as actions from \"../../actions/CardActions\";\nimport * as cardSelectors from \"../../selectors/CardSelectors\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onUpdateCard: function onUpdateCard(token, cardId, card, callback) {\n      dispatch(actions.updateCard(token, cardId, card, callback));\n    }\n  };\n};\n\nvar MoveCardFormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MoveCardFormContainer, _Component);\n\n  function MoveCardFormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MoveCardFormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MoveCardFormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      location: {\n        boardId: undefined,\n        listId: undefined,\n        position: undefined\n      }\n    };\n\n    _this.handleLocationChange = function (location) {\n      _this.setState({\n        location: location\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      if (_this.isSubmitDisabled()) {\n        return;\n      }\n\n      e.preventDefault();\n      var _this$state$location = _this.state.location,\n          boardId = _this$state$location.boardId,\n          listId = _this$state$location.listId,\n          position = _this$state$location.position;\n      var listCards = cardSelectors.listCards(_this.props.state, listId, function (a, b) {\n        return a.position - b.position;\n      });\n      var sourceBoardId = _this.props.card.boardId;\n      var changingBoard = boardId !== sourceBoardId;\n      var currentIndex = listCards.findIndex(function (card) {\n        return card._id === _this.props.card._id;\n      });\n\n      _this.props.onUpdateCard(localStorage.getItem(\"jwtToken\"), _this.props.card._id, {\n        listId: listId,\n        position: calculatePosition(listCards, position, currentIndex)\n      }, function () {\n        if (changingBoard) {\n          _this.props.history.push(\"/boards/\".concat(sourceBoardId));\n        } else {\n          _this.props.onClose(new Event(\"click\"));\n        }\n      });\n    };\n\n    _this.isSubmitDisabled = function () {\n      var _this$state$location2 = _this.state.location,\n          boardId = _this$state$location2.boardId,\n          listId = _this$state$location2.listId,\n          position = _this$state$location2.position;\n      return boardId == null || listId == null || position == null;\n    };\n\n    return _this;\n  }\n\n  _createClass(MoveCardFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MoveCardForm, {\n        card: this.props.card,\n        onCloseClick: this.props.onClose,\n        onLocationChange: this.handleLocationChange,\n        onSubmit: this.handleSubmit,\n        isSubmitDisabled: this.isSubmitDisabled(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MoveCardFormContainer;\n}(Component);\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(MoveCardFormContainer);","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/MoveCardFormContainer.jsx"],"names":["React","Component","connect","withRouter","compose","MoveCardForm","calculatePosition","actions","cardSelectors","mapStateToProps","state","mapDispatchToProps","dispatch","onUpdateCard","token","cardId","card","callback","updateCard","MoveCardFormContainer","location","boardId","undefined","listId","position","handleLocationChange","setState","handleSubmit","e","isSubmitDisabled","preventDefault","listCards","props","a","b","sourceBoardId","changingBoard","currentIndex","findIndex","_id","localStorage","getItem","history","push","onClose","Event"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport MoveCardForm from \"./MoveCardForm\";\nimport calculatePosition from \"../../lib/PositionCalculator\";\nimport * as actions from \"../../actions/CardActions\";\nimport * as cardSelectors from \"../../selectors/CardSelectors\";\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateCard: (token, cardId, card, callback) => {\n      dispatch(actions.updateCard(token, cardId, card, callback));\n    }\n  };\n};\n\nclass MoveCardFormContainer extends Component {\n  state = {\n    location: {\n      boardId: undefined,\n      listId: undefined,\n      position: undefined\n    }\n  };\n\n  handleLocationChange = location => {\n    this.setState({ location });\n  };\n\n  handleSubmit = e => {\n    if (this.isSubmitDisabled()) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const { boardId, listId, position } = this.state.location;\n    const listCards = cardSelectors.listCards(\n      this.props.state,\n      listId,\n      (a, b) => {\n        return a.position - b.position;\n      }\n    );\n\n    const sourceBoardId = this.props.card.boardId;\n    const changingBoard = boardId !== sourceBoardId;\n\n    const currentIndex = listCards.findIndex(\n      card => card._id === this.props.card._id\n    );\n\n    this.props.onUpdateCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.props.card._id,\n      {\n        listId: listId,\n        position: calculatePosition(listCards, position, currentIndex)\n      },\n      () => {\n        if (changingBoard) {\n          this.props.history.push(`/boards/${sourceBoardId}`);\n        } else {\n          this.props.onClose(new Event(\"click\"));\n        }\n      }\n    );\n  };\n\n  isSubmitDisabled = () => {\n    const { boardId, listId, position } = this.state.location;\n\n    return boardId == null || listId == null || position == null;\n  };\n  render() {\n    return (\n      <MoveCardForm\n        card={this.props.card}\n        onCloseClick={this.props.onClose}\n        onLocationChange={this.handleLocationChange}\n        onSubmit={this.handleSubmit}\n        isSubmitDisabled={this.isSubmitDisabled()}\n      />\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(MoveCardFormContainer);\n"]},"metadata":{},"sourceType":"module"}