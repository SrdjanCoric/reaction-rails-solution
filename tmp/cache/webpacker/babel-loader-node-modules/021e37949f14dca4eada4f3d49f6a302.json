{"ast":null,"code":"import moment from \"moment\";\nimport decode from \"jwt-decode\";\nexport var dueClass = function dueClass(card) {\n  var diff = moment(card.dueDate).diff(new Date(), \"days\");\n\n  if (card.completed) {\n    return \"completed\";\n  } else if (diff < -1) {\n    return \"overdue\";\n  } else if (diff < 0) {\n    return \"overdue-recent\";\n  } else if (diff < 1) {\n    return \"due-soon\";\n  } else {\n    return \"due-later\";\n  }\n};\nexport var formatDueDate = function formatDueDate(dueDate) {\n  var momentDate = moment(dueDate);\n  var formatString;\n\n  if (momentDate.toDate().getFullYear() === new Date().getFullYear()) {\n    formatString = \"MMM D\";\n  } else {\n    formatString = \"MMM D, YYYY\";\n  }\n\n  var formatted = momentDate.format(formatString);\n  return \"\".concat(formatted);\n};\nexport var checkAuth = function checkAuth() {\n  var token = localStorage.getItem(\"jwtToken\");\n\n  if (!token) {\n    return false;\n  }\n\n  try {\n    var _decode = decode(token),\n        exp = _decode.exp;\n\n    if (exp < new Date().getTime() / 1000) {\n      clearStorage();\n      return false;\n    }\n  } catch (e) {\n    clearStorage();\n    return false;\n  }\n\n  return true;\n};\nexport var clearStorage = function clearStorage() {\n  localStorage.removeItem(\"jwtToken\");\n  localStorage.removeItem(\"user\");\n};\nexport var populatedStorage = function populatedStorage(data) {\n  localStorage.setItem(\"jwtToken\", data.token);\n  localStorage.setItem(\"user\", JSON.stringify(data.user));\n};","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/utils/helpers.js"],"names":["moment","decode","dueClass","card","diff","dueDate","Date","completed","formatDueDate","momentDate","formatString","toDate","getFullYear","formatted","format","checkAuth","token","localStorage","getItem","exp","getTime","clearStorage","e","removeItem","populatedStorage","data","setItem","JSON","stringify","user"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AAC9B,MAAMC,IAAI,GAAGJ,MAAM,CAACG,IAAI,CAACE,OAAN,CAAN,CAAqBD,IAArB,CAA0B,IAAIE,IAAJ,EAA1B,EAAsC,MAAtC,CAAb;;AAEA,MAAIH,IAAI,CAACI,SAAT,EAAoB;AAClB,WAAO,WAAP;AACD,GAFD,MAEO,IAAIH,IAAI,GAAG,CAAC,CAAZ,EAAe;AACpB,WAAO,SAAP;AACD,GAFM,MAEA,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,WAAO,gBAAP;AACD,GAFM,MAEA,IAAIA,IAAI,GAAG,CAAX,EAAc;AACnB,WAAO,UAAP;AACD,GAFM,MAEA;AACL,WAAO,WAAP;AACD;AACF,CAdM;AAgBP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAH,OAAO,EAAI;AACtC,MAAMI,UAAU,GAAGT,MAAM,CAACK,OAAD,CAAzB;AACA,MAAIK,YAAJ;;AAEA,MAAID,UAAU,CAACE,MAAX,GAAoBC,WAApB,OAAsC,IAAIN,IAAJ,GAAWM,WAAX,EAA1C,EAAoE;AAClEF,IAAAA,YAAY,GAAG,OAAf;AACD,GAFD,MAEO;AACLA,IAAAA,YAAY,GAAG,aAAf;AACD;;AAED,MAAIG,SAAS,GAAGJ,UAAU,CAACK,MAAX,CAAkBJ,YAAlB,CAAhB;AAEA,mBAAUG,SAAV;AACD,CAbM;AAeP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AAED,MAAI;AAAA,kBACcf,MAAM,CAACe,KAAD,CADpB;AAAA,QACMG,GADN,WACMA,GADN;;AAEF,QAAIA,GAAG,GAAG,IAAIb,IAAJ,GAAWc,OAAX,KAAuB,IAAjC,EAAuC;AACrCC,MAAAA,YAAY;AACZ,aAAO,KAAP;AACD;AACF,GAND,CAME,OAAOC,CAAP,EAAU;AACVD,IAAAA,YAAY;AACZ,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAjBM;AAmBP,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChCJ,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAN,EAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACD,CAHM;AAKP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI,EAAI;AACtCR,EAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCD,IAAI,CAACT,KAAtC;AACAC,EAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeH,IAAI,CAACI,IAApB,CAA7B;AACD,CAHM","sourcesContent":["import moment from \"moment\";\nimport decode from \"jwt-decode\";\n\nexport const dueClass = card => {\n  const diff = moment(card.dueDate).diff(new Date(), \"days\");\n\n  if (card.completed) {\n    return \"completed\";\n  } else if (diff < -1) {\n    return \"overdue\";\n  } else if (diff < 0) {\n    return \"overdue-recent\";\n  } else if (diff < 1) {\n    return \"due-soon\";\n  } else {\n    return \"due-later\";\n  }\n};\n\nexport const formatDueDate = dueDate => {\n  const momentDate = moment(dueDate);\n  let formatString;\n\n  if (momentDate.toDate().getFullYear() === new Date().getFullYear()) {\n    formatString = \"MMM D\";\n  } else {\n    formatString = \"MMM D, YYYY\";\n  }\n\n  let formatted = momentDate.format(formatString);\n\n  return `${formatted}`;\n};\n\nexport const checkAuth = () => {\n  const token = localStorage.getItem(\"jwtToken\");\n  if (!token) {\n    return false;\n  }\n\n  try {\n    const { exp } = decode(token);\n    if (exp < new Date().getTime() / 1000) {\n      clearStorage();\n      return false;\n    }\n  } catch (e) {\n    clearStorage();\n    return false;\n  }\n  return true;\n};\n\nexport const clearStorage = () => {\n  localStorage.removeItem(\"jwtToken\");\n  localStorage.removeItem(\"user\");\n};\n\nexport const populatedStorage = data => {\n  localStorage.setItem(\"jwtToken\", data.token);\n  localStorage.setItem(\"user\", JSON.stringify(data.user));\n};\n"]},"metadata":{},"sourceType":"module"}