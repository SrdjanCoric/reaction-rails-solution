{"ast":null,"code":"import apiClient from \"../lib/ApiClient\";\nimport * as types from \"../constants/ActionTypes\";\nexport function createListRequest() {\n  return {\n    type: types.CREATE_LIST_REQUEST\n  };\n}\nexport function createListSuccess(list) {\n  return {\n    type: types.CREATE_LIST_SUCCESS,\n    payload: {\n      list: list\n    }\n  };\n}\nexport function updateListRequest() {\n  return {\n    type: types.UPDATE_LIST_REQUEST\n  };\n}\nexport function updateListSuccess(listId, newList) {\n  return {\n    type: types.UPDATE_LIST_SUCCESS,\n    payload: {\n      listId: listId,\n      newList: newList\n    }\n  };\n}\nexport function createList(token, boardId, title, position, callback) {\n  return function (dispatch) {\n    dispatch(createListRequest());\n    apiClient.createList(token, boardId, title, position, function (data) {\n      dispatch(createListSuccess(data.list));\n\n      if (callback) {\n        callback(data.list);\n      }\n    });\n  };\n}\nexport function updateList(token, listId, list, callback) {\n  return function (dispatch) {\n    dispatch(updateListRequest());\n    apiClient.updateList(token, listId, list, function (data) {\n      dispatch(updateListSuccess(listId, data.list));\n\n      if (callback) {\n        callback(data.list);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/actions/ListActions.js"],"names":["apiClient","types","createListRequest","type","CREATE_LIST_REQUEST","createListSuccess","list","CREATE_LIST_SUCCESS","payload","updateListRequest","UPDATE_LIST_REQUEST","updateListSuccess","listId","newList","UPDATE_LIST_SUCCESS","createList","token","boardId","title","position","callback","dispatch","data","updateList"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,0BAAvB;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAO;AAAEC,IAAAA,IAAI,EAAEF,KAAK,CAACG;AAAd,GAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AACtC,SAAO;AAAEH,IAAAA,IAAI,EAAEF,KAAK,CAACM,mBAAd;AAAmCC,IAAAA,OAAO,EAAE;AAAEF,MAAAA,IAAI,EAAJA;AAAF;AAA5C,GAAP;AACD;AAED,OAAO,SAASG,iBAAT,GAA6B;AAClC,SAAO;AAAEN,IAAAA,IAAI,EAAEF,KAAK,CAACS;AAAd,GAAP;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AACjD,SAAO;AACLV,IAAAA,IAAI,EAAEF,KAAK,CAACa,mBADP;AAELN,IAAAA,OAAO,EAAE;AAAEI,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,OAAO,EAAPA;AAAV;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,UAAT,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,KAApC,EAA2CC,QAA3C,EAAqDC,QAArD,EAA+D;AACpE,SAAO,UAASC,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAACnB,iBAAiB,EAAlB,CAAR;AACAF,IAAAA,SAAS,CAACe,UAAV,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C,EAAsD,UAAAG,IAAI,EAAI;AAC5DD,MAAAA,QAAQ,CAAChB,iBAAiB,CAACiB,IAAI,CAAChB,IAAN,CAAlB,CAAR;;AACA,UAAIc,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACE,IAAI,CAAChB,IAAN,CAAR;AACD;AACF,KALD;AAMD,GARD;AASD;AAED,OAAO,SAASiB,UAAT,CAAoBP,KAApB,EAA2BJ,MAA3B,EAAmCN,IAAnC,EAAyCc,QAAzC,EAAmD;AACxD,SAAO,UAASC,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAACZ,iBAAiB,EAAlB,CAAR;AACAT,IAAAA,SAAS,CAACuB,UAAV,CAAqBP,KAArB,EAA4BJ,MAA5B,EAAoCN,IAApC,EAA0C,UAAAgB,IAAI,EAAI;AAChDD,MAAAA,QAAQ,CAACV,iBAAiB,CAACC,MAAD,EAASU,IAAI,CAAChB,IAAd,CAAlB,CAAR;;AACA,UAAIc,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACE,IAAI,CAAChB,IAAN,CAAR;AACD;AACF,KALD;AAMD,GARD;AASD","sourcesContent":["import apiClient from \"../lib/ApiClient\";\nimport * as types from \"../constants/ActionTypes\";\n\nexport function createListRequest() {\n  return { type: types.CREATE_LIST_REQUEST };\n}\n\nexport function createListSuccess(list) {\n  return { type: types.CREATE_LIST_SUCCESS, payload: { list } };\n}\n\nexport function updateListRequest() {\n  return { type: types.UPDATE_LIST_REQUEST };\n}\n\nexport function updateListSuccess(listId, newList) {\n  return {\n    type: types.UPDATE_LIST_SUCCESS,\n    payload: { listId, newList }\n  };\n}\n\nexport function createList(token, boardId, title, position, callback) {\n  return function(dispatch) {\n    dispatch(createListRequest());\n    apiClient.createList(token, boardId, title, position, data => {\n      dispatch(createListSuccess(data.list));\n      if (callback) {\n        callback(data.list);\n      }\n    });\n  };\n}\n\nexport function updateList(token, listId, list, callback) {\n  return function(dispatch) {\n    dispatch(updateListRequest());\n    apiClient.updateList(token, listId, list, data => {\n      dispatch(updateListSuccess(listId, data.list));\n      if (callback) {\n        callback(data.list);\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}