{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nvar user = localStorage.getItem(\"user\");\nuser = JSON.parse(user);\nvar token = localStorage.getItem(\"jwtToken\");\nvar initialState = user ? {\n  token: token,\n  user: user,\n  isLoggedIn: true\n} : {\n  isLoggedIn: false\n};\nexport default function authentication() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LOGIN_SUCCESS:\n      return {\n        token: action.payload.token,\n        user: action.payload.user,\n        isLoggedIn: true\n      };\n\n    case types.LOGOUT_SUCCESS:\n      return {\n        isLoggedIn: false\n      };\n\n    case types.SIGNUP_SUCCESS:\n      return {\n        token: action.payload.token,\n        user: action.payload.user,\n        isLoggedIn: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/reducers/authentication.js"],"names":["types","user","localStorage","getItem","JSON","parse","token","initialState","isLoggedIn","authentication","state","action","type","LOGIN_SUCCESS","payload","LOGOUT_SUCCESS","SIGNUP_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;AACAF,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACA,IAAIK,KAAK,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ;AACA,IAAMI,YAAY,GAAGN,IAAI,GACrB;AAAEK,EAAAA,KAAK,EAALA,KAAF;AAASL,EAAAA,IAAI,EAAJA,IAAT;AAAeO,EAAAA,UAAU,EAAE;AAA3B,CADqB,GAErB;AAAEA,EAAAA,UAAU,EAAE;AAAd,CAFJ;AAIA,eAAe,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,KAAK,CAACa,aAAX;AACE,aAAO;AACLP,QAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR,KADjB;AAELL,QAAAA,IAAI,EAAEU,MAAM,CAACG,OAAP,CAAeb,IAFhB;AAGLO,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKR,KAAK,CAACe,cAAX;AACE,aAAO;AAAEP,QAAAA,UAAU,EAAE;AAAd,OAAP;;AACF,SAAKR,KAAK,CAACgB,cAAX;AACE,aAAO;AACLV,QAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR,KADjB;AAELL,QAAAA,IAAI,EAAEU,MAAM,CAACG,OAAP,CAAeb,IAFhB;AAGLO,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF;AACE,aAAOE,KAAP;AAhBJ;AAkBD","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\nlet user = localStorage.getItem(\"user\");\nuser = JSON.parse(user);\nlet token = localStorage.getItem(\"jwtToken\");\nconst initialState = user\n  ? { token, user, isLoggedIn: true }\n  : { isLoggedIn: false };\n\nexport default function authentication(state = initialState, action) {\n  switch (action.type) {\n    case types.LOGIN_SUCCESS:\n      return {\n        token: action.payload.token,\n        user: action.payload.user,\n        isLoggedIn: true\n      };\n    case types.LOGOUT_SUCCESS:\n      return { isLoggedIn: false };\n    case types.SIGNUP_SUCCESS:\n      return {\n        token: action.payload.token,\n        user: action.payload.user,\n        isLoggedIn: true\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}