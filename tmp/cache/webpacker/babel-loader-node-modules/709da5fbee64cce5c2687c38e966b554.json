{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nexport default function actions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === types.FETCH_CARD_SUCCESS) {\n    var _actions = action.payload.card.actions;\n    var filteredActions = state.filter(function (a) {\n      return a.cardId !== action.payload.card.id;\n    });\n    return filteredActions.concat(_actions);\n  } else if (action.type === types.UPDATE_CARD_SUCCESS) {\n    var _actions2 = action.payload.card.actions;\n\n    var _filteredActions = state.filter(function (a) {\n      return a.cardId !== action.payload.card.id;\n    });\n\n    return _filteredActions.concat(_actions2);\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/reducers/actions.js"],"names":["types","actions","state","action","type","FETCH_CARD_SUCCESS","payload","card","filteredActions","filter","a","cardId","id","concat","UPDATE_CARD_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,eAAe,SAASC,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgBJ,KAAK,CAACK,kBAA1B,EAA8C;AAC5C,QAAMJ,QAAO,GAAGE,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBN,OAApC;AACA,QAAMO,eAAe,GAAGN,KAAK,CAACO,MAAN,CACtB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,MAAF,KAAaR,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBK,EAArC;AAAA,KADqB,CAAxB;AAIA,WAAOJ,eAAe,CAACK,MAAhB,CAAuBZ,QAAvB,CAAP;AACD,GAPD,MAOO,IAAIE,MAAM,CAACC,IAAP,KAAgBJ,KAAK,CAACc,mBAA1B,EAA+C;AACpD,QAAMb,SAAO,GAAGE,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBN,OAApC;;AACA,QAAMO,gBAAe,GAAGN,KAAK,CAACO,MAAN,CACtB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,MAAF,KAAaR,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBK,EAArC;AAAA,KADqB,CAAxB;;AAIA,WAAOJ,gBAAe,CAACK,MAAhB,CAAuBZ,SAAvB,CAAP;AACD;;AACD,SAAOC,KAAP;AACD","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\nexport default function actions(state = [], action) {\n  if (action.type === types.FETCH_CARD_SUCCESS) {\n    const actions = action.payload.card.actions;\n    const filteredActions = state.filter(\n      a => a.cardId !== action.payload.card.id\n    );\n\n    return filteredActions.concat(actions);\n  } else if (action.type === types.UPDATE_CARD_SUCCESS) {\n    const actions = action.payload.card.actions;\n    const filteredActions = state.filter(\n      a => a.cardId !== action.payload.card.id\n    );\n\n    return filteredActions.concat(actions);\n  }\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}