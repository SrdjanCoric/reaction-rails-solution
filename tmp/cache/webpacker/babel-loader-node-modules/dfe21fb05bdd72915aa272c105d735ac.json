{"ast":null,"code":"var _jsxFileName = \"/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/CardModalContainer.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/CardActions\";\nimport { createComment } from \"../../actions/CommentActions\";\nimport moment from \"moment\";\nimport * as commentSelectors from \"../../selectors/CommentSelectors\";\nimport CardModal from \"./CardModal\";\nimport Popover from \"../shared/Popover\";\nimport DueDateForm from \"./DueDateForm\";\nimport LabelsForm from \"./LabelsForm\";\nimport CopyCardFormContainer from \"./CopyCardFormContainer\";\nimport MoveCardFormContainer from \"./MoveCardFormContainer\";\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var cardId = ownProps.match.params.id;\n  var card = state.cards.find(function (card) {\n    return card._id === cardId;\n  });\n  var list = state.lists.find(function (list) {\n    return list._id === card.listId;\n  });\n  var comments = commentSelectors.cardCommentsAndActions(state, cardId, function (a, b) {\n    return new Date(b.createdAt) - new Date(a.createdAt);\n  });\n  return {\n    card: card,\n    list: list,\n    comments: comments,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onFetchCard: function onFetchCard(token) {\n      return dispatch(actions.fetchCard(token, ownProps.match.params.id));\n    },\n    onUpdateCard: function onUpdateCard(token, id, attrs, callback) {\n      dispatch(actions.updateCard(token, id, attrs, callback));\n    },\n    onCreateComment: function onCreateComment(token, cardId, comment, callback) {\n      return dispatch(createComment(token, cardId, comment, callback));\n    },\n    onDeleteCard: function onDeleteCard(token, cardId, callback) {\n      dispatch(actions.deleteCard(token, cardId, callback));\n    }\n  };\n};\n\nvar CardModalContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardModalContainer, _React$Component);\n\n  function CardModalContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardModalContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardModalContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: \"\",\n      card: undefined,\n      popover: {\n        visible: false,\n        attachedTo: null,\n        type: null\n      }\n    };\n\n    _this.handleTitleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleTitleBlur = function (e) {\n      e.preventDefault();\n\n      _this.props.onUpdateCard(localStorage.getItem(\"jwtToken\"), _this.state.card._id, {\n        title: _this.state.title\n      });\n    };\n\n    _this.updateCardInState = function (newCard) {\n      _this.setState({\n        card: newCard,\n        title: newCard.title\n      });\n    };\n\n    _this.handleToggleArchive = function () {\n      _this.props.onUpdateCard(localStorage.getItem(\"jwtToken\"), _this.props.card._id, {\n        archived: !_this.props.card.archived\n      });\n    };\n\n    _this.handleToggleCompleted = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.props.onUpdateCard(localStorage.getItem(\"jwtToken\"), _this.props.card._id, {\n        completed: !_this.state.card.completed\n      });\n    };\n\n    _this.handleShowPopover = function (e, type) {\n      e.stopPropagation();\n\n      _this.setState({\n        popover: {\n          type: type,\n          attachedTo: e.target,\n          visible: true\n        }\n      });\n    };\n\n    _this.handleClosePopover = function (e) {\n      e.preventDefault();\n\n      _this.onClosePopover();\n    };\n\n    _this.onClosePopover = function () {\n      _this.setState({\n        popover: {\n          type: null,\n          attachedTo: null,\n          visible: false\n        }\n      });\n    };\n\n    _this.handleDueDateSubmit = function (e) {\n      e.preventDefault();\n      var date = e.target.querySelector(\".datepicker-select-date input\").value;\n      var time = e.target.querySelector(\".datepicker-select-time input\").value;\n      var dateTime = \"\".concat(date, \" \").concat(time);\n\n      _this.props.onUpdateCard(localStorage.getItem(\"jwtToken\"), _this.state.card._id, {\n        dueDate: moment(dateTime, \"M/D/YYYY h:mm A\").toISOString()\n      }, function () {\n        _this.onClosePopover();\n      });\n    };\n\n    _this.handleDueDateRemove = function (e) {\n      e.preventDefault();\n\n      _this.props.onUpdateCard(localStorage.getItem(\"jwtToken\"), _this.state.card._id, {\n        dueDate: null,\n        completed: false\n      }, function () {\n        _this.onClosePopover();\n      });\n    };\n\n    _this.handleToggleLabel = function (e, label) {\n      var currentLabels = _this.state.card.labels;\n      var labels;\n\n      if (currentLabels.indexOf(label) === -1) {\n        labels = currentLabels.concat(label);\n      } else {\n        labels = currentLabels.filter(function (currentLabel) {\n          return currentLabel !== label;\n        });\n      }\n\n      _this.props.onUpdateCard(localStorage.getItem(\"jwtToken\"), _this.state.card._id, {\n        labels: labels\n      });\n    };\n\n    _this.handleDeleteCard = function (e) {\n      _this.props.onDeleteCard(localStorage.getItem(\"jwtToken\"), _this.props.card._id);\n    };\n\n    return _this;\n  }\n\n  _createClass(CardModalContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var token = localStorage.getItem(\"jwtToken\");\n      this.props.onFetchCard(token, function (newCard) {\n        _this2.updateCardInState(newCard);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.card !== this.props.card) {\n        this.updateCardInState(this.props.card);\n      }\n    }\n  }, {\n    key: \"popoverChildren\",\n    value: function popoverChildren() {\n      var type = this.state.popover.type;\n      var visible = this.state.popover.visible;\n\n      if (visible && type) {\n        switch (type) {\n          case \"due-date\":\n            return React.createElement(DueDateForm, {\n              dueDate: this.state.card.dueDate,\n              onClose: this.handleClosePopover,\n              onSubmit: this.handleDueDateSubmit,\n              onRemove: this.handleDueDateRemove,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204\n              },\n              __self: this\n            });\n\n          case \"labels\":\n            return React.createElement(LabelsForm, {\n              selectedLabels: this.state.card.labels,\n              onClose: this.handleClosePopover,\n              onClickLabel: this.handleToggleLabel,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 213\n              },\n              __self: this\n            });\n\n          case \"copy-card\":\n            return React.createElement(CopyCardFormContainer, {\n              onClose: this.handleClosePopover,\n              card: this.state.card,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 221\n              },\n              __self: this\n            });\n\n          case \"move-card\":\n            return React.createElement(MoveCardFormContainer, {\n              onClose: this.handleClosePopover,\n              card: this.state.card,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228\n              },\n              __self: this\n            });\n\n          default:\n            return null;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.card && this.props.list) {\n        return React.createElement(React.Fragment, null, React.createElement(CardModal, {\n          user: this.props.user,\n          title: this.state.title,\n          card: this.state.card,\n          list: this.props.list,\n          onTitleBlur: this.handleTitleBlur,\n          onTitleChange: this.handleTitleChange,\n          onUpdateCard: this.props.onUpdateCard,\n          onToggleArchive: this.handleToggleArchive,\n          onCreateComment: this.props.onCreateComment,\n          comments: this.props.comments,\n          onShowPopover: this.handleShowPopover,\n          onToggleCompleted: this.handleToggleCompleted,\n          onDeleteCard: this.handleDeleteCard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }), React.createElement(Popover, Object.assign({}, this.state.popover, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }), this.popoverChildren()));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return CardModalContainer;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardModalContainer);","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/CardModalContainer.jsx"],"names":["React","connect","actions","createComment","moment","commentSelectors","CardModal","Popover","DueDateForm","LabelsForm","CopyCardFormContainer","MoveCardFormContainer","mapStateToProps","state","ownProps","cardId","match","params","id","card","cards","find","_id","list","lists","listId","comments","cardCommentsAndActions","a","b","Date","createdAt","user","mapDispatchToProps","dispatch","onFetchCard","token","fetchCard","onUpdateCard","attrs","callback","updateCard","onCreateComment","comment","onDeleteCard","deleteCard","CardModalContainer","title","undefined","popover","visible","attachedTo","type","handleTitleChange","e","setState","target","name","value","handleTitleBlur","preventDefault","props","localStorage","getItem","updateCardInState","newCard","handleToggleArchive","archived","handleToggleCompleted","stopPropagation","completed","handleShowPopover","handleClosePopover","onClosePopover","handleDueDateSubmit","date","querySelector","time","dateTime","dueDate","toISOString","handleDueDateRemove","handleToggleLabel","label","currentLabels","labels","indexOf","concat","filter","currentLabel","handleDeleteCard","prevProps","popoverChildren","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/CardActions\";\nimport { createComment } from \"../../actions/CommentActions\";\nimport moment from \"moment\";\nimport * as commentSelectors from \"../../selectors/CommentSelectors\";\nimport CardModal from \"./CardModal\";\nimport Popover from \"../shared/Popover\";\nimport DueDateForm from \"./DueDateForm\";\nimport LabelsForm from \"./LabelsForm\";\nimport CopyCardFormContainer from \"./CopyCardFormContainer\";\nimport MoveCardFormContainer from \"./MoveCardFormContainer\";\n\nconst mapStateToProps = (state, ownProps) => {\n  const cardId = ownProps.match.params.id;\n  const card = state.cards.find(card => card._id === cardId);\n  const list = state.lists.find(list => list._id === card.listId);\n  const comments = commentSelectors.cardCommentsAndActions(\n    state,\n    cardId,\n    (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n  );\n  return {\n    card,\n    list,\n    comments,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onFetchCard: token =>\n      dispatch(actions.fetchCard(token, ownProps.match.params.id)),\n    onUpdateCard: (token, id, attrs, callback) => {\n      dispatch(actions.updateCard(token, id, attrs, callback));\n    },\n    onCreateComment: (token, cardId, comment, callback) =>\n      dispatch(createComment(token, cardId, comment, callback)),\n    onDeleteCard: (token, cardId, callback) => {\n      dispatch(actions.deleteCard(token, cardId, callback));\n    }\n  };\n};\n\nclass CardModalContainer extends React.Component {\n  state = {\n    title: \"\",\n    card: undefined,\n    popover: {\n      visible: false,\n      attachedTo: null,\n      type: null\n    }\n  };\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"jwtToken\");\n    this.props.onFetchCard(token, newCard => {\n      this.updateCardInState(newCard);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.card !== this.props.card) {\n      this.updateCardInState(this.props.card);\n    }\n  }\n\n  handleTitleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleTitleBlur = e => {\n    e.preventDefault();\n\n    this.props.onUpdateCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.state.card._id,\n      {\n        title: this.state.title\n      }\n    );\n  };\n\n  updateCardInState = newCard => {\n    this.setState({\n      card: newCard,\n      title: newCard.title\n    });\n  };\n\n  handleToggleArchive = () => {\n    this.props.onUpdateCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.props.card._id,\n      {\n        archived: !this.props.card.archived\n      }\n    );\n  };\n\n  handleToggleCompleted = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onUpdateCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.props.card._id,\n      {\n        completed: !this.state.card.completed\n      }\n    );\n  };\n\n  handleShowPopover = (e, type) => {\n    e.stopPropagation();\n\n    this.setState({\n      popover: {\n        type,\n        attachedTo: e.target,\n        visible: true\n      }\n    });\n  };\n\n  handleClosePopover = e => {\n    e.preventDefault();\n    this.onClosePopover();\n  };\n\n  onClosePopover = () => {\n    this.setState({\n      popover: {\n        type: null,\n        attachedTo: null,\n        visible: false\n      }\n    });\n  };\n\n  handleDueDateSubmit = e => {\n    e.preventDefault();\n\n    const date = e.target.querySelector(\".datepicker-select-date input\").value;\n    const time = e.target.querySelector(\".datepicker-select-time input\").value;\n    const dateTime = `${date} ${time}`;\n\n    this.props.onUpdateCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.state.card._id,\n      { dueDate: moment(dateTime, \"M/D/YYYY h:mm A\").toISOString() },\n      () => {\n        this.onClosePopover();\n      }\n    );\n  };\n\n  handleDueDateRemove = e => {\n    e.preventDefault();\n    this.props.onUpdateCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.state.card._id,\n      { dueDate: null, completed: false },\n      () => {\n        this.onClosePopover();\n      }\n    );\n  };\n\n  handleToggleLabel = (e, label) => {\n    const currentLabels = this.state.card.labels;\n    let labels;\n\n    if (currentLabels.indexOf(label) === -1) {\n      labels = currentLabels.concat(label);\n    } else {\n      labels = currentLabels.filter(currentLabel => currentLabel !== label);\n    }\n\n    this.props.onUpdateCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.state.card._id,\n      {\n        labels\n      }\n    );\n  };\n\n  handleDeleteCard = e => {\n    this.props.onDeleteCard(\n      localStorage.getItem(\"jwtToken\"),\n      this.props.card._id\n    );\n  };\n\n  popoverChildren() {\n    const type = this.state.popover.type;\n    const visible = this.state.popover.visible;\n    if (visible && type) {\n      switch (type) {\n        case \"due-date\":\n          return (\n            <DueDateForm\n              dueDate={this.state.card.dueDate}\n              onClose={this.handleClosePopover}\n              onSubmit={this.handleDueDateSubmit}\n              onRemove={this.handleDueDateRemove}\n            />\n          );\n        case \"labels\":\n          return (\n            <LabelsForm\n              selectedLabels={this.state.card.labels}\n              onClose={this.handleClosePopover}\n              onClickLabel={this.handleToggleLabel}\n            />\n          );\n        case \"copy-card\":\n          return (\n            <CopyCardFormContainer\n              onClose={this.handleClosePopover}\n              card={this.state.card}\n            />\n          );\n        case \"move-card\":\n          return (\n            <MoveCardFormContainer\n              onClose={this.handleClosePopover}\n              card={this.state.card}\n            />\n          );\n        default:\n          return null;\n      }\n    }\n  }\n\n  render() {\n    if (this.state.card && this.props.list) {\n      return (\n        <>\n          <CardModal\n            user={this.props.user}\n            title={this.state.title}\n            card={this.state.card}\n            list={this.props.list}\n            onTitleBlur={this.handleTitleBlur}\n            onTitleChange={this.handleTitleChange}\n            onUpdateCard={this.props.onUpdateCard}\n            onToggleArchive={this.handleToggleArchive}\n            onCreateComment={this.props.onCreateComment}\n            comments={this.props.comments}\n            onShowPopover={this.handleShowPopover}\n            onToggleCompleted={this.handleToggleCompleted}\n            onDeleteCard={this.handleDeleteCard}\n          />\n          <Popover {...this.state.popover}>{this.popoverChildren()}</Popover>\n        </>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardModalContainer);\n"]},"metadata":{},"sourceType":"module"}