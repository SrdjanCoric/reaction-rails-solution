{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport function cardComments(state, cardId, sortFunction) {\n  var comments = state.comments.filter(function (comment) {\n    return comment.card_id === cardId;\n  });\n\n  if (typeof sortFunction === \"function\") {\n    return comments.sort(sortFunction);\n  } else {\n    return comments;\n  }\n}\nexport function cardCommentsAndActions(state, cardId, sortFunction) {\n  var comments = cardComments(state, cardId);\n  console.log(\"in selectors\", state);\n  var actions = state.actions.filter(function (action) {\n    return action.card_id === cardId;\n  }).map(function (action) {\n    return _objectSpread({}, action, {\n      isAction: true\n    });\n  });\n\n  if (typeof sortFunction === \"function\") {\n    return comments.concat(actions).sort(sortFunction);\n  } else {\n    return comments.concat(actions);\n  }\n}","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/selectors/CommentSelectors.js"],"names":["cardComments","state","cardId","sortFunction","comments","filter","comment","card_id","sort","cardCommentsAndActions","console","log","actions","action","map","isAction","concat"],"mappings":";;;;;;AAAA,OAAO,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,YAArC,EAAmD;AACxD,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAN,CAAeC,MAAf,CAAsB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACC,OAAR,KAAoBL,MAAxB;AAAA,GAA7B,CAAjB;;AAEA,MAAI,OAAOC,YAAP,KAAwB,UAA5B,EAAwC;AACtC,WAAOC,QAAQ,CAACI,IAAT,CAAcL,YAAd,CAAP;AACD,GAFD,MAEO;AACL,WAAOC,QAAP;AACD;AACF;AAED,OAAO,SAASK,sBAAT,CAAgCR,KAAhC,EAAuCC,MAAvC,EAA+CC,YAA/C,EAA6D;AAClE,MAAMC,QAAQ,GAAGJ,YAAY,CAACC,KAAD,EAAQC,MAAR,CAA7B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BV,KAA5B;AACA,MAAMW,OAAO,GAAGX,KAAK,CAACW,OAAN,CACbP,MADa,CACN,UAAAQ,MAAM,EAAI;AAChB,WAAOA,MAAM,CAACN,OAAP,KAAmBL,MAA1B;AACD,GAHa,EAIbY,GAJa,CAIT,UAAAD,MAAM;AAAA,6BAAUA,MAAV;AAAkBE,MAAAA,QAAQ,EAAE;AAA5B;AAAA,GAJG,CAAhB;;AAMA,MAAI,OAAOZ,YAAP,KAAwB,UAA5B,EAAwC;AACtC,WAAOC,QAAQ,CAACY,MAAT,CAAgBJ,OAAhB,EAAyBJ,IAAzB,CAA8BL,YAA9B,CAAP;AACD,GAFD,MAEO;AACL,WAAOC,QAAQ,CAACY,MAAT,CAAgBJ,OAAhB,CAAP;AACD;AACF","sourcesContent":["export function cardComments(state, cardId, sortFunction) {\n  const comments = state.comments.filter(comment => comment.card_id === cardId);\n\n  if (typeof sortFunction === \"function\") {\n    return comments.sort(sortFunction);\n  } else {\n    return comments;\n  }\n}\n\nexport function cardCommentsAndActions(state, cardId, sortFunction) {\n  const comments = cardComments(state, cardId);\n  console.log(\"in selectors\", state);\n  const actions = state.actions\n    .filter(action => {\n      return action.card_id === cardId;\n    })\n    .map(action => ({ ...action, isAction: true }));\n\n  if (typeof sortFunction === \"function\") {\n    return comments.concat(actions).sort(sortFunction);\n  } else {\n    return comments.concat(actions);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}