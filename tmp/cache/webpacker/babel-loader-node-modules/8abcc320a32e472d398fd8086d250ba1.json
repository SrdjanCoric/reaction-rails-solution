{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/ListActions\";\nimport * as listSelectors from \"../../selectors/ListSelectors\";\nimport calculatePosition from \"../../lib/PositionCalculator\";\nimport ListWrapper from \"./ListWrapper\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatch: dispatch\n  };\n};\n\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\n  return _objectSpread({}, ownProps, {\n    onDrop: function handleDrop(e) {\n      var droppedEl = e.target;\n      var listId = droppedEl.dataset.listId;\n      var siblings = Array.prototype.slice.call(droppedEl.parentNode.childNodes);\n      var lists = listSelectors.boardListsSelector(stateProps.state, ownProps.boardId);\n      var targetIndex = siblings.indexOf(droppedEl);\n      var sortedStartingList = lists.slice().sort(function (a, b) {\n        return a.position - b.position;\n      });\n      var droppedList = sortedStartingList.find(function (list) {\n        return list.id === listId;\n      });\n      var sourceIndex = sortedStartingList.indexOf(droppedList);\n      var newPosition = calculatePosition(lists, targetIndex, sourceIndex);\n      var token = localStorage.getItem(\"jwtToken\");\n      dispatchProps.dispatch(actions.updateList(token, ownProps.id, {\n        position: newPosition\n      }));\n    }\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(ListWrapper);","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/list/ListWrapperContainer.jsx"],"names":["connect","actions","listSelectors","calculatePosition","ListWrapper","mapStateToProps","state","mapDispatchToProps","dispatch","mergeProps","stateProps","dispatchProps","ownProps","onDrop","handleDrop","e","droppedEl","target","listId","dataset","siblings","Array","prototype","slice","call","parentNode","childNodes","lists","boardListsSelector","boardId","targetIndex","indexOf","sortedStartingList","sort","a","b","position","droppedList","find","list","id","sourceIndex","newPosition","token","localStorage","getItem","updateList"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,+BAA/B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLA,IAAAA,KAAK,EAALA;AADK,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLA,IAAAA,QAAQ,EAARA;AADK,GAAP;AAGD,CAJD;;AAMA,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,aAAhC,EAA+CC,QAA/C,EAAyD;AACvD,2BACKA,QADL;AAEEC,IAAAA,MAAM,EAAE,SAASC,UAAT,CAAoBC,CAApB,EAAuB;AAC7B,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAApB;AACA,UAAMC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkBD,MAAjC;AACA,UAAME,QAAQ,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CACfR,SAAS,CAACS,UAAV,CAAqBC,UADN,CAAjB;AAGA,UAAMC,KAAK,GAAGzB,aAAa,CAAC0B,kBAAd,CACZlB,UAAU,CAACJ,KADC,EAEZM,QAAQ,CAACiB,OAFG,CAAd;AAIA,UAAMC,WAAW,GAAGV,QAAQ,CAACW,OAAT,CAAiBf,SAAjB,CAApB;AACA,UAAMgB,kBAAkB,GAAGL,KAAK,CAC7BJ,KADwB,GAExBU,IAFwB,CAEnB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAzB;AAAA,OAFmB,CAA3B;AAGA,UAAMC,WAAW,GAAGL,kBAAkB,CAACM,IAAnB,CAAwB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYtB,MAAhB;AAAA,OAA5B,CAApB;AACA,UAAMuB,WAAW,GAAGT,kBAAkB,CAACD,OAAnB,CAA2BM,WAA3B,CAApB;AACA,UAAMK,WAAW,GAAGvC,iBAAiB,CAACwB,KAAD,EAAQG,WAAR,EAAqBW,WAArB,CAArC;AACA,UAAIE,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ;AACAlC,MAAAA,aAAa,CAACH,QAAd,CACEP,OAAO,CAAC6C,UAAR,CAAmBH,KAAnB,EAA0B/B,QAAQ,CAAC4B,EAAnC,EAAuC;AACrCJ,QAAAA,QAAQ,EAAEM;AAD2B,OAAvC,CADF;AAKD;AAzBH;AA2BD;;AAED,eAAe1C,OAAO,CACpBK,eADoB,EAEpBE,kBAFoB,EAGpBE,UAHoB,CAAP,CAIbL,WAJa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\n\nimport * as actions from \"../../actions/ListActions\";\nimport * as listSelectors from \"../../selectors/ListSelectors\";\nimport calculatePosition from \"../../lib/PositionCalculator\";\n\nimport ListWrapper from \"./ListWrapper\";\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nfunction mergeProps(stateProps, dispatchProps, ownProps) {\n  return {\n    ...ownProps,\n    onDrop: function handleDrop(e) {\n      const droppedEl = e.target;\n      const listId = droppedEl.dataset.listId;\n      const siblings = Array.prototype.slice.call(\n        droppedEl.parentNode.childNodes\n      );\n      const lists = listSelectors.boardListsSelector(\n        stateProps.state,\n        ownProps.boardId\n      );\n      const targetIndex = siblings.indexOf(droppedEl);\n      const sortedStartingList = lists\n        .slice()\n        .sort((a, b) => a.position - b.position);\n      const droppedList = sortedStartingList.find(list => list.id === listId);\n      const sourceIndex = sortedStartingList.indexOf(droppedList);\n      const newPosition = calculatePosition(lists, targetIndex, sourceIndex);\n      let token = localStorage.getItem(\"jwtToken\");\n      dispatchProps.dispatch(\n        actions.updateList(token, ownProps.id, {\n          position: newPosition\n        })\n      );\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(ListWrapper);\n"]},"metadata":{},"sourceType":"module"}