{"ast":null,"code":"var _jsxFileName = \"/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/board/BoardContainer.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as boardActions from \"../../actions/BoardActions\";\nimport Board from \"./Board\";\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var boardId;\n  var card;\n  var url = ownProps.match.url;\n\n  if (url.match(new RegExp(\"^/boards/\"))) {\n    boardId = +ownProps.match.params.id;\n  } else {\n    card = state.cards.find(function (card) {\n      return card.id === +ownProps.match.params.id;\n    });\n\n    if (card) {\n      boardId = card.board_id;\n    } else {\n      boardId = null;\n    }\n  }\n\n  if (boardId) {\n    return {\n      board: state.boards.find(function (board) {\n        return board.id === boardId;\n      }),\n      card: card,\n      boardId: boardId,\n      user: state.user,\n      loading: state.loading\n    };\n  } else {\n    return {\n      board: null,\n      card: card,\n      boardId: boardId,\n      user: state.user,\n      loading: state.loading\n    };\n  }\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchBoard: function onFetchBoard(token, boardId, callback) {\n      dispatch(boardActions.fetchBoard(token, boardId, callback));\n    }\n  };\n};\n\nvar BoardContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BoardContainer, _React$Component);\n\n  function BoardContainer() {\n    _classCallCheck(this, BoardContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoardContainer).apply(this, arguments));\n  }\n\n  _createClass(BoardContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Board, {\n        board: this.props.board,\n        card: this.props.card,\n        boardId: this.props.boardId,\n        user: this.props.user,\n        loading: this.props.loading,\n        match: this.props.match,\n        onFetchBoard: this.props.onFetchBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return BoardContainer;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardContainer);","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/board/BoardContainer.jsx"],"names":["React","connect","boardActions","Board","mapStateToProps","state","ownProps","boardId","card","url","match","RegExp","params","id","cards","find","board_id","board","boards","user","loading","mapDispatchToProps","dispatch","onFetchBoard","token","callback","fetchBoard","BoardContainer","props","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,YAAZ,MAA8B,4BAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAIC,OAAJ;AACA,MAAIC,IAAJ;AAF2C,MAGnCC,GAHmC,GAG3BH,QAAQ,CAACI,KAHkB,CAGnCD,GAHmC;;AAI3C,MAAIA,GAAG,CAACC,KAAJ,CAAU,IAAIC,MAAJ,CAAW,WAAX,CAAV,CAAJ,EAAwC;AACtCJ,IAAAA,OAAO,GAAG,CAACD,QAAQ,CAACI,KAAT,CAAeE,MAAf,CAAsBC,EAAjC;AACD,GAFD,MAEO;AACLL,IAAAA,IAAI,GAAGH,KAAK,CAACS,KAAN,CAAYC,IAAZ,CAAiB,UAAAP,IAAI;AAAA,aAAIA,IAAI,CAACK,EAAL,KAAY,CAACP,QAAQ,CAACI,KAAT,CAAeE,MAAf,CAAsBC,EAAvC;AAAA,KAArB,CAAP;;AACA,QAAIL,IAAJ,EAAU;AACRD,MAAAA,OAAO,GAAGC,IAAI,CAACQ,QAAf;AACD,KAFD,MAEO;AACLT,MAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACD,MAAIA,OAAJ,EAAa;AACX,WAAO;AACLU,MAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaH,IAAb,CAAkB,UAAAE,KAAK;AAAA,eAAIA,KAAK,CAACJ,EAAN,KAAaN,OAAjB;AAAA,OAAvB,CADF;AAELC,MAAAA,IAAI,EAAEA,IAFD;AAGLD,MAAAA,OAAO,EAAEA,OAHJ;AAILY,MAAAA,IAAI,EAAEd,KAAK,CAACc,IAJP;AAKLC,MAAAA,OAAO,EAAEf,KAAK,CAACe;AALV,KAAP;AAOD,GARD,MAQO;AACL,WAAO;AACLH,MAAAA,KAAK,EAAE,IADF;AAELT,MAAAA,IAAI,EAAEA,IAFD;AAGLD,MAAAA,OAAO,EAAEA,OAHJ;AAILY,MAAAA,IAAI,EAAEd,KAAK,CAACc,IAJP;AAKLC,MAAAA,OAAO,EAAEf,KAAK,CAACe;AALV,KAAP;AAOD;AACF,CA/BD;;AAiCA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLC,IAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQjB,OAAR,EAAiBkB,QAAjB,EAA8B;AAC1CH,MAAAA,QAAQ,CAACpB,YAAY,CAACwB,UAAb,CAAwBF,KAAxB,EAA+BjB,OAA/B,EAAwCkB,QAAxC,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;IAQME,c;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWX,KADpB;AAEE,QAAA,IAAI,EAAE,KAAKW,KAAL,CAAWpB,IAFnB;AAGE,QAAA,OAAO,EAAE,KAAKoB,KAAL,CAAWrB,OAHtB;AAIE,QAAA,IAAI,EAAE,KAAKqB,KAAL,CAAWT,IAJnB;AAKE,QAAA,OAAO,EAAE,KAAKS,KAAL,CAAWR,OALtB;AAME,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWlB,KANpB;AAOE,QAAA,YAAY,EAAE,KAAKkB,KAAL,CAAWL,YAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EAb0BvB,KAAK,CAAC6B,S;;AAgBnC,eAAe5B,OAAO,CAACG,eAAD,EAAkBiB,kBAAlB,CAAP,CAA6CM,cAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as boardActions from \"../../actions/BoardActions\";\nimport Board from \"./Board\";\n\nconst mapStateToProps = (state, ownProps) => {\n  let boardId;\n  let card;\n  const { url } = ownProps.match;\n  if (url.match(new RegExp(\"^/boards/\"))) {\n    boardId = +ownProps.match.params.id;\n  } else {\n    card = state.cards.find(card => card.id === +ownProps.match.params.id);\n    if (card) {\n      boardId = card.board_id;\n    } else {\n      boardId = null;\n    }\n  }\n  if (boardId) {\n    return {\n      board: state.boards.find(board => board.id === boardId),\n      card: card,\n      boardId: boardId,\n      user: state.user,\n      loading: state.loading\n    };\n  } else {\n    return {\n      board: null,\n      card: card,\n      boardId: boardId,\n      user: state.user,\n      loading: state.loading\n    };\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchBoard: (token, boardId, callback) => {\n      dispatch(boardActions.fetchBoard(token, boardId, callback));\n    }\n  };\n};\n\nclass BoardContainer extends React.Component {\n  render() {\n    return (\n      <Board\n        board={this.props.board}\n        card={this.props.card}\n        boardId={this.props.boardId}\n        user={this.props.user}\n        loading={this.props.loading}\n        match={this.props.match}\n        onFetchBoard={this.props.onFetchBoard}\n      />\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardContainer);\n"]},"metadata":{},"sourceType":"module"}