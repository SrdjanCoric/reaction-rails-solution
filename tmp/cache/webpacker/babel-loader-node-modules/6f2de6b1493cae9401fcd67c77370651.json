{"ast":null,"code":"var _jsxFileName = \"/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/NewCommentFormContainer.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/CommentActions\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  var token = localStorage.getItem(\"jwtToken\");\n  return {\n    onSubmit: function onSubmit(text, callback) {\n      dispatch(actions.createComment(token, ownProps.cardId, text, callback));\n    }\n  };\n};\n\nvar NewCommentFormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewCommentFormContainer, _Component);\n\n  function NewCommentFormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewCommentFormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewCommentFormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comment: \"\",\n      isSaving: false\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        comment: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isSaving: true\n      });\n\n      _this.props.onSubmit(_this.state.comment, function () {\n        _this.setState({\n          comment: \"\",\n          isSaving: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewCommentFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NewCommentForm, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        comment: this.state.comment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return NewCommentFormContainer;\n}(Component);\n\nexport default connect(null, mapDispatchToProps)(NewCommentFormContainer);","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/NewCommentFormContainer.jsx"],"names":["React","Component","connect","actions","NewCommentForm","mapDispatchToProps","dispatch","ownProps","token","localStorage","getItem","onSubmit","text","callback","createComment","cardId","NewCommentFormContainer","state","comment","isSaving","handleChange","e","setState","target","value","handleSubmit","preventDefault","props"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWC,QAAX,EAAwB;AACjD,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,kBAACC,IAAD,EAAOC,QAAP,EAAoB;AAC5BP,MAAAA,QAAQ,CAACH,OAAO,CAACW,aAAR,CAAsBN,KAAtB,EAA6BD,QAAQ,CAACQ,MAAtC,EAA8CH,IAA9C,EAAoDC,QAApD,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAPD;;IASMG,uB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAKRC,Y,GAAe,UAAAC,CAAC,EAAI;AAClB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAEG,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd;AACD,K;;UAEDC,Y,GAAe,UAAAJ,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACK,cAAF;;AAEA,YAAKJ,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OAAd;;AAEA,YAAKQ,KAAL,CAAWhB,QAAX,CAAoB,MAAKM,KAAL,CAAWC,OAA/B,EAAwC,YAAM;AAC5C,cAAKI,QAAL,CAAc;AACZJ,UAAAA,OAAO,EAAE,EADG;AAEZC,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OALD;AAMD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,cAAD;AACE,QAAA,QAAQ,EAAE,KAAKC,YADjB;AAEE,QAAA,QAAQ,EAAE,KAAKK,YAFjB;AAGE,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWC,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EA/BmCjB,S;;AAkCtC,eAAeC,OAAO,CAAC,IAAD,EAAOG,kBAAP,CAAP,CAAkCW,uBAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/CommentActions\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  let token = localStorage.getItem(\"jwtToken\");\n  return {\n    onSubmit: (text, callback) => {\n      dispatch(actions.createComment(token, ownProps.cardId, text, callback));\n    }\n  };\n};\n\nclass NewCommentFormContainer extends Component {\n  state = {\n    comment: \"\",\n    isSaving: false\n  };\n\n  handleChange = e => {\n    this.setState({ comment: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState({ isSaving: true });\n\n    this.props.onSubmit(this.state.comment, () => {\n      this.setState({\n        comment: \"\",\n        isSaving: false\n      });\n    });\n  };\n\n  render() {\n    return (\n      <NewCommentForm\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        comment={this.state.comment}\n      />\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(NewCommentFormContainer);\n"]},"metadata":{},"sourceType":"module"}