{"ast":null,"code":"import axios from \"axios\";\nimport * as routes from \"../constants/ApiRoutes\";\nimport { clearStorage } from \"../utils/helpers\";\n\nfunction logError(errorResponse) {\n  var response = errorResponse.response;\n\n  if (response.status === 401) {\n    clearStorage();\n  }\n\n  if (response && response.data && response.data.error) {\n    console.error(\"HTTP Error: \".concat(response.data.error));\n  } else {\n    console.error(\"Error: \", errorResponse);\n  }\n}\n\nfunction unwrapData(response) {\n  return response.data;\n}\n\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\naxios.defaults.headers.common[\"Accept\"] = \"application/json\";\nvar apiClient = {\n  getBoards: function getBoards(token, callback, error) {\n    var config = {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios.get(routes.BOARDS_INDEX_URL, config).then(unwrapData).then(callback)[\"catch\"](function (res) {\n      return logError(res, error);\n    });\n  },\n  createBoard: function createBoard(token, board, callback) {\n    var config = {\n      method: \"POST\",\n      url: routes.CREATE_BOARD_URL,\n      data: {\n        board: board\n      },\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios(config).then(unwrapData).then(callback)[\"catch\"](logError);\n  },\n  getBoard: function getBoard(token, id, callback, error) {\n    var config = {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios.get(routes.getBoardUrl(id), config).then(unwrapData).then(callback)[\"catch\"](function (res) {\n      return logError(res, error);\n    });\n  },\n  createList: function createList(token, boardId, title, position, callback) {\n    var config = {\n      method: \"POST\",\n      url: routes.CREATE_LIST_URL,\n      data: {\n        boardId: boardId,\n        title: title,\n        position: position\n      },\n      headers: {\n        Authorization: \"Bearer + \".concat(token)\n      }\n    };\n    return axios(config).then(unwrapData).then(callback)[\"catch\"](logError);\n  },\n  updateList: function updateList(token, listId, list, callback) {\n    var config = {\n      method: \"PUT\",\n      url: routes.updateListUrl(listId),\n      data: {\n        list: list\n      },\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios(config).then(unwrapData).then(callback)[\"catch\"](logError);\n  },\n  createCard: function createCard(token, listId, card, callback) {\n    var config = {\n      method: \"POST\",\n      url: routes.CREATE_CARD_URL,\n      data: {\n        listId: listId,\n        card: card\n      },\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios(config).then(unwrapData).then(callback)[\"catch\"](logError);\n  },\n  getCard: function getCard(token, id, callback, error) {\n    var config = {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios.get(routes.getCardUrl(id), config).then(unwrapData).then(callback)[\"catch\"](function (res) {\n      return logError(res, error);\n    });\n  },\n  updateCard: function updateCard(token, cardId, attrs, callback) {\n    var config = {\n      method: \"PUT\",\n      url: routes.updateCardUrl(cardId),\n      data: {\n        attrs: attrs\n      },\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios(config).then(unwrapData).then(callback)[\"catch\"](logError);\n  },\n  deleteCard: function deleteCard(token, cardId, callback) {\n    var config = {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios[\"delete\"](routes.deleteCardUrl(cardId), config).then(unwrapData).then(callback)[\"catch\"](logError);\n  },\n  createComment: function createComment(token, cardId, text, callback) {\n    var config = {\n      method: \"POST\",\n      url: routes.CREATE_COMMENT_URL,\n      data: {\n        cardId: cardId,\n        text: text\n      },\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return axios(config).then(unwrapData).then(callback)[\"catch\"](logError);\n  },\n  login: function login(user, callback, error) {\n    return axios.post(routes.LOGIN, {\n      user: user\n    }).then(unwrapData).then(callback)[\"catch\"](function (res) {\n      return logError(res, error);\n    });\n  },\n  signup: function signup(user, callback) {\n    return axios.post(routes.SIGNUP, {\n      user: user\n    }).then(unwrapData).then(callback)[\"catch\"](logError);\n  }\n};\nexport default apiClient;","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/lib/ApiClient.js"],"names":["axios","routes","clearStorage","logError","errorResponse","response","status","data","error","console","unwrapData","defaults","headers","common","apiClient","getBoards","token","callback","config","Authorization","get","BOARDS_INDEX_URL","then","res","createBoard","board","method","url","CREATE_BOARD_URL","getBoard","id","getBoardUrl","createList","boardId","title","position","CREATE_LIST_URL","updateList","listId","list","updateListUrl","createCard","card","CREATE_CARD_URL","getCard","getCardUrl","updateCard","cardId","attrs","updateCardUrl","deleteCard","deleteCardUrl","createComment","text","CREATE_COMMENT_URL","login","user","post","LOGIN","signup","SIGNUP"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as routes from \"../constants/ApiRoutes\";\nimport { clearStorage } from \"../utils/helpers\";\n\nfunction logError(errorResponse) {\n  const response = errorResponse.response;\n\n  if (response.status === 401) {\n    clearStorage();\n  }\n\n  if (response && response.data && response.data.error) {\n    console.error(`HTTP Error: ${response.data.error}`);\n  } else {\n    console.error(\"Error: \", errorResponse);\n  }\n}\n\nfunction unwrapData(response) {\n  return response.data;\n}\n\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\naxios.defaults.headers.common[\"Accept\"] = \"application/json\";\n\nconst apiClient = {\n  getBoards: function (token, callback, error) {\n    let config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    return axios\n      .get(routes.BOARDS_INDEX_URL, config)\n      .then(unwrapData)\n      .then(callback)\n      .catch((res) => logError(res, error));\n  },\n  createBoard: function (token, board, callback) {\n    let config = {\n      method: \"POST\",\n      url: routes.CREATE_BOARD_URL,\n      data: { board },\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios(config).then(unwrapData).then(callback).catch(logError);\n  },\n  getBoard: function (token, id, callback, error) {\n    let config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    return axios\n      .get(routes.getBoardUrl(id), config)\n      .then(unwrapData)\n      .then(callback)\n      .catch((res) => logError(res, error));\n  },\n  createList: function (token, boardId, title, position, callback) {\n    let config = {\n      method: \"POST\",\n      url: routes.CREATE_LIST_URL,\n      data: { boardId, title, position },\n      headers: { Authorization: `Bearer + ${token}` },\n    };\n    return axios(config).then(unwrapData).then(callback).catch(logError);\n  },\n  updateList: function (token, listId, list, callback) {\n    let config = {\n      method: \"PUT\",\n      url: routes.updateListUrl(listId),\n      data: { list },\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios(config).then(unwrapData).then(callback).catch(logError);\n  },\n  createCard: function (token, listId, card, callback) {\n    let config = {\n      method: \"POST\",\n      url: routes.CREATE_CARD_URL,\n      data: { listId, card },\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios(config).then(unwrapData).then(callback).catch(logError);\n  },\n  getCard: function (token, id, callback, error) {\n    let config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    return axios\n      .get(routes.getCardUrl(id), config)\n      .then(unwrapData)\n      .then(callback)\n      .catch((res) => logError(res, error));\n  },\n  updateCard: function (token, cardId, attrs, callback) {\n    let config = {\n      method: \"PUT\",\n      url: routes.updateCardUrl(cardId),\n      data: { attrs },\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios(config).then(unwrapData).then(callback).catch(logError);\n  },\n  deleteCard: function (token, cardId, callback) {\n    let config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    return axios\n      .delete(routes.deleteCardUrl(cardId), config)\n      .then(unwrapData)\n      .then(callback)\n      .catch(logError);\n  },\n  createComment: function (token, cardId, text, callback) {\n    let config = {\n      method: \"POST\",\n      url: routes.CREATE_COMMENT_URL,\n      data: { cardId, text },\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    return axios(config).then(unwrapData).then(callback).catch(logError);\n  },\n  login: function (user, callback, error) {\n    return axios\n      .post(routes.LOGIN, { user })\n      .then(unwrapData)\n      .then(callback)\n      .catch((res) => logError(res, error));\n  },\n  signup: function (user, callback) {\n    return axios\n      .post(routes.SIGNUP, { user })\n      .then(unwrapData)\n      .then(callback)\n      .catch(logError);\n  },\n};\n\nexport default apiClient;\n"]},"metadata":{},"sourceType":"module"}