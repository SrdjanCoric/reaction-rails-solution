{"ast":null,"code":"var _jsxFileName = \"/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/CardLocationFormContainer.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CardLocationForm from \"./CardLocationForm\";\nimport * as listSelectors from \"../../selectors/ListSelectors\";\nimport * as cardSelectors from \"../../selectors/CardSelectors\";\nimport { fetchBoards, fetchBoard } from \"../../actions/BoardActions\";\n\nvar sortByTitle = function sortByTitle(a, b) {\n  var aTitle = a.title.toLowerCase();\n  var bTitle = b.title.toLowerCase();\n  if (aTitle < bTitle) return -1;\n  if (aTitle > bTitle) return 1;\n  return 0;\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    boards: state.boards.sort(sortByTitle),\n    lists: listSelectors.boardListsSelector(state, ownProps.card.boardId).sort(sortByTitle),\n    cards: cardSelectors.listCards(state, ownProps.card.listId).sort(function (a, b) {\n      return a.position - b.position;\n    }),\n    state: state,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchBoards: function onFetchBoards(token, callback) {\n      dispatch(fetchBoards(token, callback));\n    },\n    onFetchBoard: function onFetchBoard(token, id, callback) {\n      dispatch(fetchBoard(token, id, callback));\n    }\n  };\n};\n\nvar CardLocationFormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardLocationFormContainer, _React$Component);\n\n  function CardLocationFormContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardLocationFormContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardLocationFormContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedBoard: undefined,\n      selectedList: undefined,\n      boards: [],\n      lists: [],\n      positions: [],\n      selectedPosition: undefined\n    };\n\n    _this.currentCardPositionIndex = function () {\n      var cards = _this.props.cards;\n      var currentPosition = cards.findIndex(function (card) {\n        return card._id === _this.props.card._id;\n      });\n      if (currentPosition === -1) currentPosition = undefined;\n      return currentPosition;\n    };\n\n    _this.handleBoardChange = function (e) {\n      var selectedValue = e.target.value;\n\n      _this.selectBoard(selectedValue);\n    };\n\n    _this.handleListChange = function (e) {\n      var selectedValue = e.target.value;\n\n      _this.selectList(selectedValue);\n    };\n\n    _this.selectBoard = function (id) {\n      _this.props.onFetchBoard(localStorage.getItem(\"jwtToken\"), id, function (board) {\n        var newLists = board.lists.sort(sortByTitle);\n\n        _this.setState({\n          selectedBoard: board,\n          lists: newLists\n        }, function () {\n          if (_this.state.selectedBoard._id === _this.props.card.boardId) {\n            _this.selectList(_this.props.card.listId);\n          } else if (newLists.length) {\n            _this.selectList(newLists[0]._id);\n          } else {\n            _this.selectList();\n          }\n        });\n      });\n    };\n\n    _this.handlePositionChange = function (e) {\n      var selectedValue = +e.target.value;\n\n      _this.selectPosition(selectedValue);\n    };\n\n    _this.selectPosition = function (position) {\n      if (position === \"bottom\") {\n        position = _this.state.positions[_this.state.positions.length - 1];\n      }\n\n      if (position != null) {\n        _this.setState({\n          selectedPosition: position\n        }, function () {\n          _this.props.onLocationChange({\n            boardId: _this.state.selectedBoard && _this.state.selectedBoard._id,\n            listId: _this.state.selectedList && _this.state.selectedList._id,\n            position: _this.state.selectedPosition\n          });\n        });\n      } else {\n        _this.setState({\n          selectedPosition: _this.state.positions[0]\n        }, function () {\n          _this.props.onLocationChange({\n            boardId: _this.state.selectedBoard && _this.state.selectedBoard._id,\n            listId: _this.state.selectedList && _this.state.selectedList._id,\n            position: _this.state.selectedPosition\n          });\n        });\n      }\n    };\n\n    _this.selectList = function (id) {\n      var list;\n      var positions = [];\n\n      if (id) {\n        list = _this.state.lists.find(function (list) {\n          return list._id === id;\n        });\n      } else {\n        list = _this.state.lists[0];\n      }\n\n      if (list) {\n        var cards = cardSelectors.listCards(_this.props.state, list._id).sort(function (a, b) {\n          return a.position - b.position;\n        });\n        var currentPosition = cards.findIndex(function (card) {\n          return card._id === _this.props.card._id;\n        });\n        if (currentPosition === -1) currentPosition = undefined;\n        var potentialPositionsLength;\n\n        if (currentPosition === undefined || _this.props.mode === \"copy\") {\n          potentialPositionsLength = cards.length + 1;\n        } else {\n          potentialPositionsLength = cards.length;\n        }\n\n        for (var i = 0; i < potentialPositionsLength; i++) {\n          positions.push(i);\n        }\n      }\n\n      _this.setState({\n        selectedList: list,\n        positions: positions\n      }, function () {\n        if (_this.state.selectedBoard._id === _this.props.card.boardId && _this.state.selectedList._id === _this.props.card.listId && _this.props.mode !== \"copy\") {\n          _this.selectPosition(_this.currentCardPositionIndex());\n        } else {\n          _this.selectPosition(\"bottom\");\n        }\n      });\n    };\n\n    _this.selectedPositionHumanIndex = function () {\n      if (_this.state.selectedPosition == null) {\n        return \"N/A\";\n      } else {\n        return _this.state.selectedPosition + 1;\n      }\n    };\n\n    _this.selectedBoardTitle = function () {\n      if (_this.state.selectedBoard) {\n        return _this.state.selectedBoard.title;\n      } else {\n        return \"No Boards\";\n      }\n    };\n\n    _this.selectedBoardId = function () {\n      if (_this.state.selectedBoard) {\n        return _this.state.selectedBoard._id;\n      } else {\n        return undefined;\n      }\n    };\n\n    _this.selectedListTitle = function () {\n      if (_this.state.selectedList) {\n        return _this.state.selectedList.title;\n      } else {\n        return \"No Lists\";\n      }\n    };\n\n    _this.selectedListId = function () {\n      if (_this.state.selectedList) {\n        return _this.state.selectedList._id;\n      } else {\n        return undefined;\n      }\n    };\n\n    _this.isSubmitDisabled = function () {\n      return _this.state.selectedBoard == null || _this.state.selectedList == null || _this.state.selectedPosition == null;\n    };\n\n    return _this;\n  }\n\n  _createClass(CardLocationFormContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.onFetchBoards(localStorage.getItem(\"jwtToken\"));\n      this.setState({\n        selectedBoard: this.props.boards.find(function (board) {\n          return board._id === _this2.props.card.boardId;\n        }),\n        selectedPosition: this.currentCardPositionIndex(),\n        boards: this.props.boards,\n        lists: this.props.lists\n      }, function () {\n        _this2.selectList(_this2.props.card.listId);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.boards.length !== this.props.boards.length) {\n        this.setState({\n          boards: this.props.boards\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CardLocationForm, {\n        boards: this.state.boards,\n        lists: this.state.lists,\n        positions: this.state.positions,\n        selectedBoardId: this.selectedBoardId(),\n        selectedBoardTitle: this.selectedBoardTitle(),\n        selectedListId: this.selectedListId(),\n        selectedListTitle: this.selectedListTitle(),\n        selectedPosition: this.state.selectedPosition,\n        currentPosition: this.currentCardPositionIndex(),\n        selectedPositionHumanIndex: this.selectedPositionHumanIndex(),\n        onPositionChange: this.handlePositionChange,\n        currentBoardId: this.props.card.boardId,\n        currentListId: this.props.card.listId,\n        onBoardChange: this.handleBoardChange,\n        onListChange: this.handleListChange,\n        isSubmitDisabled: this.isSubmitDisabled(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CardLocationFormContainer;\n}(React.Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardLocationFormContainer);","map":{"version":3,"sources":["/home/srdjan/Desktop/LS/capstone_ta/reaction_solution/app/javascript/components/card/CardLocationFormContainer.jsx"],"names":["React","connect","CardLocationForm","listSelectors","cardSelectors","fetchBoards","fetchBoard","sortByTitle","a","b","aTitle","title","toLowerCase","bTitle","mapStateToProps","state","ownProps","boards","sort","lists","boardListsSelector","card","boardId","cards","listCards","listId","position","user","mapDispatchToProps","dispatch","onFetchBoards","token","callback","onFetchBoard","id","CardLocationFormContainer","selectedBoard","undefined","selectedList","positions","selectedPosition","currentCardPositionIndex","props","currentPosition","findIndex","_id","handleBoardChange","e","selectedValue","target","value","selectBoard","handleListChange","selectList","localStorage","getItem","board","newLists","setState","length","handlePositionChange","selectPosition","onLocationChange","list","find","potentialPositionsLength","mode","i","push","selectedPositionHumanIndex","selectedBoardTitle","selectedBoardId","selectedListTitle","selectedListId","isSubmitDisabled","prevProps","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CardLocationForm from \"./CardLocationForm\";\nimport * as listSelectors from \"../../selectors/ListSelectors\";\nimport * as cardSelectors from \"../../selectors/CardSelectors\";\nimport { fetchBoards, fetchBoard } from \"../../actions/BoardActions\";\n\nconst sortByTitle = (a, b) => {\n  const aTitle = a.title.toLowerCase();\n  const bTitle = b.title.toLowerCase();\n\n  if (aTitle < bTitle) return -1;\n  if (aTitle > bTitle) return 1;\n  return 0;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boards: state.boards.sort(sortByTitle),\n    lists: listSelectors\n      .boardListsSelector(state, ownProps.card.boardId)\n      .sort(sortByTitle),\n    cards: cardSelectors\n      .listCards(state, ownProps.card.listId)\n      .sort((a, b) => a.position - b.position),\n    state: state,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchBoards: (token, callback) => {\n      dispatch(fetchBoards(token, callback));\n    },\n    onFetchBoard: (token, id, callback) => {\n      dispatch(fetchBoard(token, id, callback));\n    }\n  };\n};\n\nclass CardLocationFormContainer extends React.Component {\n  state = {\n    selectedBoard: undefined,\n    selectedList: undefined,\n    boards: [],\n    lists: [],\n    positions: [],\n    selectedPosition: undefined\n  };\n\n  componentDidMount() {\n    this.props.onFetchBoards(localStorage.getItem(\"jwtToken\"));\n    this.setState(\n      {\n        selectedBoard: this.props.boards.find(board => {\n          return board._id === this.props.card.boardId;\n        }),\n        selectedPosition: this.currentCardPositionIndex(),\n        boards: this.props.boards,\n        lists: this.props.lists\n      },\n      () => {\n        this.selectList(this.props.card.listId);\n      }\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.boards.length !== this.props.boards.length) {\n      this.setState({ boards: this.props.boards });\n    }\n  }\n\n  currentCardPositionIndex = () => {\n    const cards = this.props.cards;\n    let currentPosition = cards.findIndex(\n      card => card._id === this.props.card._id\n    );\n    if (currentPosition === -1) currentPosition = undefined;\n\n    return currentPosition;\n  };\n\n  handleBoardChange = e => {\n    const selectedValue = e.target.value;\n    this.selectBoard(selectedValue);\n  };\n\n  handleListChange = e => {\n    const selectedValue = e.target.value;\n    this.selectList(selectedValue);\n  };\n\n  selectBoard = id => {\n    this.props.onFetchBoard(localStorage.getItem(\"jwtToken\"), id, board => {\n      const newLists = board.lists.sort(sortByTitle);\n      this.setState(\n        {\n          selectedBoard: board,\n          lists: newLists\n        },\n        () => {\n          if (this.state.selectedBoard._id === this.props.card.boardId) {\n            this.selectList(this.props.card.listId);\n          } else if (newLists.length) {\n            this.selectList(newLists[0]._id);\n          } else {\n            this.selectList();\n          }\n        }\n      );\n    });\n  };\n\n  handlePositionChange = e => {\n    const selectedValue = +e.target.value;\n\n    this.selectPosition(selectedValue);\n  };\n\n  selectPosition = position => {\n    if (position === \"bottom\") {\n      position = this.state.positions[this.state.positions.length - 1];\n    }\n\n    if (position != null) {\n      this.setState(\n        {\n          selectedPosition: position\n        },\n        () => {\n          this.props.onLocationChange({\n            boardId: this.state.selectedBoard && this.state.selectedBoard._id,\n            listId: this.state.selectedList && this.state.selectedList._id,\n            position: this.state.selectedPosition\n          });\n        }\n      );\n    } else {\n      this.setState(\n        {\n          selectedPosition: this.state.positions[0]\n        },\n        () => {\n          this.props.onLocationChange({\n            boardId: this.state.selectedBoard && this.state.selectedBoard._id,\n            listId: this.state.selectedList && this.state.selectedList._id,\n            position: this.state.selectedPosition\n          });\n        }\n      );\n    }\n  };\n\n  selectList = id => {\n    let list;\n    const positions = [];\n    if (id) {\n      list = this.state.lists.find(list => list._id === id);\n    } else {\n      list = this.state.lists[0];\n    }\n\n    if (list) {\n      const cards = cardSelectors\n        .listCards(this.props.state, list._id)\n        .sort((a, b) => a.position - b.position);\n      let currentPosition = cards.findIndex(\n        card => card._id === this.props.card._id\n      );\n      if (currentPosition === -1) currentPosition = undefined;\n\n      let potentialPositionsLength;\n\n      if (currentPosition === undefined || this.props.mode === \"copy\") {\n        potentialPositionsLength = cards.length + 1;\n      } else {\n        potentialPositionsLength = cards.length;\n      }\n\n      for (let i = 0; i < potentialPositionsLength; i++) {\n        positions.push(i);\n      }\n    }\n\n    this.setState(\n      {\n        selectedList: list,\n        positions\n      },\n      () => {\n        if (\n          this.state.selectedBoard._id === this.props.card.boardId &&\n          this.state.selectedList._id === this.props.card.listId &&\n          this.props.mode !== \"copy\"\n        ) {\n          this.selectPosition(this.currentCardPositionIndex());\n        } else {\n          this.selectPosition(\"bottom\");\n        }\n      }\n    );\n  };\n\n  selectedPositionHumanIndex = () => {\n    if (this.state.selectedPosition == null) {\n      return \"N/A\";\n    } else {\n      return this.state.selectedPosition + 1;\n    }\n  };\n\n  selectedBoardTitle = () => {\n    if (this.state.selectedBoard) {\n      return this.state.selectedBoard.title;\n    } else {\n      return \"No Boards\";\n    }\n  };\n\n  selectedBoardId = () => {\n    if (this.state.selectedBoard) {\n      return this.state.selectedBoard._id;\n    } else {\n      return undefined;\n    }\n  };\n\n  selectedListTitle = () => {\n    if (this.state.selectedList) {\n      return this.state.selectedList.title;\n    } else {\n      return \"No Lists\";\n    }\n  };\n\n  selectedListId = () => {\n    if (this.state.selectedList) {\n      return this.state.selectedList._id;\n    } else {\n      return undefined;\n    }\n  };\n\n  isSubmitDisabled = () => {\n    return (\n      this.state.selectedBoard == null ||\n      this.state.selectedList == null ||\n      this.state.selectedPosition == null\n    );\n  };\n\n  render() {\n    return (\n      <CardLocationForm\n        boards={this.state.boards}\n        lists={this.state.lists}\n        positions={this.state.positions}\n        selectedBoardId={this.selectedBoardId()}\n        selectedBoardTitle={this.selectedBoardTitle()}\n        selectedListId={this.selectedListId()}\n        selectedListTitle={this.selectedListTitle()}\n        selectedPosition={this.state.selectedPosition}\n        currentPosition={this.currentCardPositionIndex()}\n        selectedPositionHumanIndex={this.selectedPositionHumanIndex()}\n        onPositionChange={this.handlePositionChange}\n        currentBoardId={this.props.card.boardId}\n        currentListId={this.props.card.listId}\n        onBoardChange={this.handleBoardChange}\n        onListChange={this.handleListChange}\n        isSubmitDisabled={this.isSubmitDisabled()}\n      />\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CardLocationFormContainer);\n"]},"metadata":{},"sourceType":"module"}